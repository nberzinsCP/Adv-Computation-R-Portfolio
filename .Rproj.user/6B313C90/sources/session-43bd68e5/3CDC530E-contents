---
title: "Lab 9: Baby Names"
subtitle: "Regression"
author: "Your name"
format: 
  html:
    self-contained: true
    code-tools: true
    toc: true
editor: source
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

```{r setup}
#| include: false
library(tidyverse)
library(ggplot2)
library(broom)
library("knitr")
library(DT)
```

[Download .qmd starter file](Lab9-babynames.qmd)

[Download `StateNames_E.csv`](baby-names-data/StateNames_E.csv)

Our data set in this lab contains baby names that begin with "E" and their popularity over time. For each year, and for each name with at least 50 recorded babies born, we are given the counts of how many babies had that name.

::: callout-note
If you wish to download the data set for your name, you can find the names for ALL 50 states, in separate data sets organized by first letter of the name [here](https://github.com/earobinson95/stat331-calpoly/tree/master/lab-assignments/lab9/baby-names-data).
:::

Let's take a look at how the name "Emily" has changed over time. As my name begins with "E", you should load in the `StateNames_E.csv` data set.

```{r}
#| include: false
babies_e <- read.csv("StateNames_E.csv")
```

##Interactive Table

```{r}
#Shortened the data to only include the names we were interseted in, DT said that originally the datatable was too large to run standalone

babies_e |>
  rename("Sex" = Gender) |>
  filter(Name %in% c("Emily", "Emilee", "Emilie", "Emmalee", "Emmaleigh")) |>
  group_by(Name, State, Sex, Year) |>
  summarise(Count = sum(Count)) |>
  pivot_wider(names_from = Name,
              values_from = Count, 
              values_fill = 0) |>
  datatable(editable = list(target = 'row'),
            rownames = FALSE, 
            filter = "top")
```


## Explore the Number of Emilys

**1. _Create a Game Plan & Code!_ -- Make a summary table of the number of babies named "Emily" for each state and the sex of the baby.**

  + **Specifically, each state should be its own row and each sex should have its own column.**
  + **Additionally, if there were no babies born with the name "Emily" for that combination of state & sex the table should have a value of 0 (not an `NA`).** 
  
::: callout-warning 
To be clear, there should be **one** row per state, which means you need to `summarize()` all the years for each state.
:::

::: callout-caution
The dataset has a column titled `Gender`, which contains two values `"F"` and `"M"`, representing "Female" and "Male". The sex someone was assigned at birth is different from their gender identity [(definitions)](https://www.plannedparenthood.org/learn/gender-identity/sex-gender-identity). Thus, this variable should be renamed to `Sex` or `Sex at Birth`.

You should be using only **one** {dplyr} pipeline!
:::

Nils's Game Plan:
1. Rename Gender --> Sex
2. Look for only Emilys in the data set
3. Seeing as I'm looking for the number of babies named emily for each sex and state, group by sex and state
4. Get a sum of the counts to then pivot_wider those counts into separate sex columns
5. Acquire that cash money 


```{r}
# Code Q1
all_Emilys <- babies_e |>
  rename("Sex" = Gender) |>
  filter(Name == "Emily") |>
  group_by(State, Sex) |>
  summarise(Count = sum(Count)) |>
  pivot_wider(names_from = Sex,
              values_from = Count, 
              values_fill = 0)

kable(x = all_Emilys,
      format = "html",
      caption = "Number of Children Named Emily at Brith Between 1997 and 2014", 
      col.names = c("State of Birth","Born Female", "Born Male"))
        
 

```

**2. You should have seen in the table above that "Emily" is a name given overwhelmingly to babies assigned "female" at birth. Create a new data set to include only babies named "Emily" assigned `F`emale at birth. Summarize the data so there is one observation (the total number of Emilys born) for each year.**

::: callout-note
+ Remember you wanted to rename the variable "Gender"
+ Save this data set so you can use it in the rest of the lab questions.
+ No output needed for this question, only code
:::

```{r}
# Code Q2
babies_e |>
  rename("Sex" = Gender) |>
  filter(Name == "Emily", Sex == "F") |>
  group_by(Year) |>
  summarise(Count = sum(Count)) |>
  kable(format = "html",
      caption = "Number of Children Named Emily at Brith Between 1997 and 2014", col.names = c("Year Born", "Number of Children Born"))

```

**3. Using the new summarized data set from above, make a visualization showing how the popularity of the name "Emily" for babies assigned female at birth has changed over the years.**

```{r}
# Code Q3
babies_e |>
  rename("Sex" = Gender) |>
  filter(Name == "Emily", Sex == "F") |>
  group_by(Year) |>
  summarise(Count = sum(Count)) |>
  ggplot(aes(x = Year, y = Count)) +
  geom_line()

```

## Modeling the Number of Emilys

**4. Using the new summarized data set from above, create a linear model with the year as the explanatory variable, and the number of Emilys as the response.**

```{r}
# Code Q4
reg_babies <- babies_e |>
  rename("Sex" = Gender) |>
  filter(Name == "Emily", Sex == "F") |>
  group_by(Year) |>
  summarise(Count = sum(Count)) |>
  lm(Count ~ Year,
     data = _)

reg_babies

```

**5. Visualize the linear regression.**

```{r}
# Code Q5
babies_e |>
  rename("Sex" = Gender) |>
  filter(Name == "Emily", Sex == "F") |>
  group_by(Year) |>
  summarise(Count = sum(Count)) |> 
  ggplot(aes(x = Year, y = Count)) +
  geom_point() +
  geom_smooth(method = "lm")

```

**6. Write out the estimated regression equation.**

```{r}
# Code Q6
reg_babies

```

Predicted Count = 1963731.4 -968.9(Year)

**7. Plot the _residuals_ of the model versus the Year. Comment on the residuals - do you see any patterns?**

::: callout-tip
The `augment()` function from the **broom** package may be helpful!
:::

```{r}
# Code Q7
#augment(reg_babies)

augment(reg_babies) |>
  ggplot(aes(x = Year, y = .resid)) +
  geom_point() +
  geom_smooth(method = "lm")

```

It appears to be a cyclical ebb and flow in the popularity of the name Emily. Almost seems to follow a sin wave. Probably comes from a generational perception of the saturation of the girls names with the name Emily. 

**8. What do you conclude from this model? Is my name not cool anymore?**

If we were to extrapolate from this pattern depicted in the residual plot, it appears that the name Emily is coming back into popularity into the 2020s, meaning your name is probably cool right now (personal experience can back this up, I've met a ton of Emilys here in SLO).

## Spelling by State

In middle school I was **so** upset with my parents for not naming me "Emmaleigh". Past my pre-teen rebellion, I'm happy with my name and am glad when baristas spell it "Emily".

**9. Narrow the original E name data set down to only female-assigned babies with alternative spellings -- "Emilee", "Emilie", "Emmaleigh", or "Emmalee".**

```{r output: false}
# Code Q9
babies_e |>
  rename("Sex" = Gender) |>
  filter(Name %in% c("Emilee", "Emilie", "Emmaleigh", "Emmalee") & Sex == "F") |>
  distinct(Name) |> #Done to avoid the long output otherwise produced
  kable("html", col.names = "Alternate Spellings of 'Emily' Left In Dataset")

```

**10. Make a plot comparing the popularity (total count) of these alternate spellings over time.**

```{r}
# Code Q10
babies_e |>
  rename("Sex" = Gender) |>
  filter(Name %in% c("Emilee", "Emilie", "Emmaleigh", "Emmalee")) |>
  group_by(Name, Year) |>
  summarise(Count = sum(Count)) |>
  ggplot(aes(x = Year, y = Count, color = Name)) +
  geom_point() +
  geom_line()

```

**11. The spelling of Emmaleigh is the least common of the four alternatives. However, the spelling picked up popularity in the Southeast (North Carolina, Georgia, and Florida). Create a table to display the number of babies born with each alternative spelling in each of these these three Southeast states, as well as in California, during 2012.**

::: callout-warning
Specifically, each of the four alternative spellings should be in their own column and each of the four states should have their own row.
:::

::: callout-caution
You should be using only **one** {dplyr} pipeline!
:::

```{r}
# Code Q11
babies_e |>
  rename("Sex" = Gender) |>
  filter(Name %in% c("Emilee", "Emilie", "Emmaleigh", "Emmalee") &
           State %in% c("CA", "NC", "GA", "FL") &
           Year == 2012) |>
  group_by(State, Name) |>
  summarise(Count = sum(Count)) |>
  pivot_wider(names_from = Name, 
              values_from = Count) |>
  kable("html", 
        col.names = c("State of Birth", "Named Emilee", "Named Emilie", "Named Emmalee", "Name Emmaleigh"),
        caption = "Number of Children Born With Alternate Spellings to Emily in the Southeast and California")

```


**12. Create a table that converts your total counts to overall percents. That is, what was the percent breakdown between the four alternative spellings in each of the four states?**

::: callout-caution
You should be using only **one** {dplyr} pipeline!
:::

```{r}
# Code Q12

babies_e |>
  rename("Sex" = Gender) |>
  filter(Name %in% c("Emilee", "Emilie", "Emmaleigh", "Emmalee") &
           State %in% c("CA", "NC", "GA", "FL") &
           Year == 2012) |>
  group_by(State, Name) |>
  summarise(Count = sum(Count)) |>
  pivot_wider(names_from = Name, 
              values_from = Count) |>
  mutate(total = sum(Emilee, Emilie, Emmalee, Emmaleigh),
         across(.cols = Emilee:Emmaleigh, ~ round(.x/total * 100, digits = 2))) |>
  select(-total) |>
  datatable(class = "cell-border stripe", 
            editable = list(target = 'row', disable = list(columns = 0)),  #DT is 0 indexed
            rownames = FALSE,
            fillContainer = TRUE,
            caption = htmltools::tags$caption(
              style = 'caption-side: bottom; text-align: center;',
              'Tabl 1: ', htmltools::em('Percentage of children born in southeastern states and California with alternate spellings of Emily')
            )) |>
  formatStyle(columns = c(2,3,4,5),backgroundColor = "#e5f0fa", fontWeight = 'bold') |>
  formatStyle(columns = c(1),backgroundColor = "#c7e2fa")

```